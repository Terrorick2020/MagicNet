generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id               @default( autoincrement() )
  createdAt DateTime @default( now() ) @map( "created_at" )
  updatedAt DateTime @updatedAt        @map( "updated_at" )

  email     String   @unique
  password  String
  role      Role     @default( Guest )
  isVerify  Boolean  @default( false )

  Info      Info[]
  // Data      Data[]
  // Config    Config[]
}

// model Data {
//   id        Int      @id               @default(autoincrement())
//   createdAt DateTime @default( now() ) @map("created_at")
//   updatedAt DateTime @updatedAt        @map("updated_at")

//   nickname String    @unique
//   phone    String    @unique

//   userId    Int      @map("user_id")
//   User      User     @relation( fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade )
// }

model Info {
  id        Int      @id               @default( autoincrement() )
  createdAt DateTime @default( now() ) @map("created_at")
  updatedAt DateTime @updatedAt        @map("updated_at")

  name      String   @default("Не задано")

  userId    Int      @map("user_id")
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

// model Config {
//   id        Int      @id               @default( autoincrement() )
//   createdAt DateTime @default( now() ) @map( "created_at" )
//   updatedAt DateTime @updatedAt        @map( "updated_at" )

//   theme     String
//   icon      Bytes   
//   accepted  Boolean


//   userId    Int      @map( "user_id" )
//   User      User     @relation( fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade )
// }

enum Role {
  Admin
  Guest
}
